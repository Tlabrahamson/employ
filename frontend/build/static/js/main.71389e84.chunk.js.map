{"version":3,"sources":["context/UserContext.js","styles/GlobalStyles.js","components/Nav.js","components/Footer.js","components/Hero.js","pages/JobList.js","styles/FormWrapper.js","components/Error.js","pages/Login.js","pages/Register.js","pages/ViewSingleJob.js","pages/CreateNewJobListing.js","pages/UpdateJobListing.js","App.js","index.js"],"names":["createContext","GlobalStyles","createGlobalStyle","HeaderWrap","styled","header","Nav","userData","useContext","UserContext","user","to","name","onClick","e","preventDefault","token","localStorage","getItem","setItem","console","log","window","location","FooterWrap","footer","Footer","year","Date","getFullYear","HeroWrapper","div","Hero","JobListWrapper","JobList","useState","jobs","setJobs","useEffect","axios","get","then","res","data","catch","err","listJobs","slice","reverse","map","job","month","date","getMonth","day","getDate","jobDate","key","_id","jobTitle","company","FormWrapper","ErrorNotice","props","className","message","clearError","Login","email","setEmail","password","setPassword","error","setError","setUserData","handleSubmit","a","loginUser","post","loginResponse","response","msg","Error","undefined","htmlFor","type","onChange","target","value","placeholder","Register","setName","confirmPassword","setConfirmPassword","newUser","alert","SingleJobWrapper","ViewSingleJob","url","jobId","useParams","setJob","find","salary","description","contactName","contactEmail","delete","CreateNewJobListing","setJobTitle","setCompany","setDescription","setLocation","setSalary","setContactName","setContactEmail","newJob","method","UpdateJobListing","updatedJob","App","headers","getUser","checkLoggedIn","Provider","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71389e84.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport default createContext(null);\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    background: #2e343b;\n    font-family: 'Roboto', sans-serif;\n    position: relative;\n    min-height: 100vh;\n}\n\nmain {\n    padding: 0 8rem;\n    width: 1200px;\n    margin: 0 auto;\n    padding-bottom: 8rem;\n}\n\nbutton {\n    cursor: pointer;\n    transition: all 0.4s ease;\n    \n    &:hover {\n        opacity: 0.7;\n      }\n}\n\na {\n    transition: all 0.4s ease;\n    \n    &:hover {\n        opacity: 0.7;\n      }\n}\n\n@media screen and (max-width: 1200px) {\n    main {\n        width: 100%;\n        padding: 0 2rem;\n    }\n}\n`;\n\nexport default GlobalStyles;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport UserContext from \"../context/UserContext\";\n\nconst HeaderWrap = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 8rem;\n  background: #232023;\n  color: #fff;\n  margin-bottom: 4rem;\n\n  nav {\n    display: flex;\n    flex-direction: column;\n  }\n\n  nav ul {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 2rem;\n    list-style: none;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  nav a {\n    width: 100%;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n  }\n\n  nav button {\n    background: transparent;\n    font-size: 18px;\n    border: none;\n    color: #fff;\n  }\n\n  @media screen and (max-width: 800px) {\n    padding: 2rem;\n  }\n`;\n\nexport default function Nav() {\n  const { userData } = useContext(UserContext);\n\n  const handleLogout = e => {\n    e.preventDefault();\n    let token = localStorage.getItem(\"auth-token\");\n    localStorage.setItem(\"auth-token\", \"\");\n    console.log(token);\n    window.location = \"/\";\n  };\n\n  if (userData.user) {\n    return (\n      <HeaderWrap>\n        <Link to=\"/\">\n          <h1>Jr Dev Sim</h1>\n        </Link>\n        <p>Hello, {userData.user.name}</p>\n        <nav>\n          <ul>\n            <Link to=\"/create\">\n              <li>List a Job</li>\n            </Link>\n            <button onClick={handleLogout}>\n              <li>Log Out</li>\n            </button>\n          </ul>\n        </nav>\n      </HeaderWrap>\n    );\n  }\n  return (\n    <HeaderWrap>\n      <Link to=\"/\">\n        <h1>Jr Dev Sim</h1>\n      </Link>\n      <nav>\n        <ul>\n          <Link to=\"/login\">\n            <li>Login</li>\n          </Link>\n          <Link to=\"/register\">\n            <li>Register</li>\n          </Link>\n        </ul>\n      </nav>\n    </HeaderWrap>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FooterWrap = styled.footer`\n  padding: 1rem 8rem;\n  color: #fff;\n  position: absolute;\n  bottom: 0;\n  background: #3f3c3f;\n  width: 100%;\n\n  @media screen and (max-width: 800px) {\n    padding: 2rem;\n  }\n`;\n\nexport default function Footer() {\n  const date = new Date();\n  const year = date.getFullYear();\n  return (\n    <FooterWrap>\n      <h3>&copy; {year} Tim Abrahamson</h3>\n    </FooterWrap>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeroWrapper = styled.div`\n  text-align: center;\n  color: #fff;\n\n  h2 {\n    font-size: 2.5rem;\n    padding-bottom: 0.5rem;\n  }\n\n  p {\n    font-size: 1.25rem;\n  }\n\n  hr {\n    margin: 4rem 0;\n  }\n`;\n\nconst Hero = () => {\n  return (\n    <HeroWrapper>\n      <h2>Find your dream job!</h2>\n      <p>Tech jobs for every skill level.</p>\n      <hr />\n    </HeroWrapper>\n  );\n};\n\nexport default Hero;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\n// Components\nimport Hero from \"../components/Hero\";\n\nconst JobListWrapper = styled.div`\n  background: #3d4349;\n  padding: 2rem;\n  border-radius: 10px;\n  display: grid;\n  grid-row-gap: 2rem;\n\n  h3 {\n    font-size: 1.75rem;\n  }\n\n  h4 {\n    font-weight: 400;\n    font-size: 1.5rem;\n  }\n\n  p {\n    font-size: 18px;\n  }\n\n  article {\n    padding: 1rem;\n    border-radius: 10px;\n    background: #2e343b;\n    color: #fff;\n  }\n\n  article a {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  @media screen and (max-width: 1200px) {\n    h2 {\n      font-size: 2rem;\n      padding: 4rem 2rem;\n    }\n  }\n`;\n\nconst JobList = () => {\n  const url = \"https://jr-dev-sim-backend.herokuapp.com\";\n  const [jobs, setJobs] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`${url}/api/job/`)\n      .then(res => {\n        setJobs(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n  const listJobs = jobs\n    .slice(0)\n    .reverse()\n    .map(job => {\n      let month = new Date(job.date).getMonth();\n      let day = new Date(job.date).getDate();\n      let year = new Date(job.date).getFullYear();\n      let jobDate = `${month}/${day}/${year}`;\n\n      return (\n        <article key={job._id}>\n          <Link to={`/jobs/${job._id}`}>\n            <h3>{job.jobTitle}</h3>\n          </Link>\n          <h4>{job.company}</h4>\n          <p>{job.location}</p>\n          <p>Posted: {jobDate}</p>\n        </article>\n      );\n    });\n\n  return (\n    <>\n      <Hero />\n      <JobListWrapper>{listJobs}</JobListWrapper>\n    </>\n  );\n};\n\nexport default JobList;\n","import styled from \"styled-components\";\n\nconst FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3d4349;\n  padding: 2rem;\n  color: #fff;\n  border-radius: 10px;\n\n  form {\n    display: grid;\n    background: #2e343b;\n    padding: 0 1rem;\n    border-radius: 10px;\n    margin: 2rem 0;\n  }\n\n  input {\n    width: 500px;\n    font-size: 1rem;\n    padding: 0.3rem 0;\n  }\n\n  textarea {\n    font-family: \"Roboto\", sans-serif;\n    height: 100px;\n    padding: 0.3rem 0.2rem;\n  }\n\n  label {\n    margin-top: 2rem;\n    margin-bottom: 0.4rem;\n    font-size: 18px;\n  }\n\n  button {\n    margin: 2rem 0;\n    width: 100px;\n    cursor: pointer;\n    border-radius: 10px;\n    padding: 0.3rem 0;\n    font-size: 1rem;\n    background: #e74990;\n    color: #fff;\n    border: none;\n  }\n\n  a {\n    color: inherit;\n  }\n\n  @media screen and (max-width: 1200px) {\n    display: inline-block;\n    width: 100%;\n\n    input {\n      width: 100%;\n    }\n  }\n`;\n\nexport default FormWrapper;\n","import React from \"react\";\n\nconst ErrorNotice = props => {\n  return (\n    <div className=\"error-notice\">\n      <span>{props.message}</span>\n      <button onClick={props.clearError}>X</button>\n    </div>\n  );\n};\n\nexport default ErrorNotice;\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport UserContext from \"../context/UserContext\";\nimport FormWrapper from \"../styles/FormWrapper\";\nimport Error from \"../components/Error\";\n\nconst Login = () => {\n  const url = \"https://jr-dev-sim-backend.herokuapp.com\";\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState();\n\n  const { setUserData } = useContext(UserContext);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const loginUser = {\n        email,\n        password\n      };\n      const loginResponse = await axios.post(\n        `${url}/api/user/login`,\n        loginUser\n      );\n\n      setUserData({\n        token: loginResponse.data.token,\n        user: loginResponse.data.user\n      });\n      localStorage.setItem(\"auth-token\", loginResponse.data.token);\n      window.location = \"/\";\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n      console.log(err);\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <h2>Login</h2>\n      {error && (\n        <Error message={error} clearError={() => setError(undefined)} />\n      )}\n      <form>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          onChange={e => setEmail(e.target.value)}\n          value={email}\n          placeholder=\"Email\"\n        />\n\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          onChange={e => setPassword(e.target.value)}\n          value={password}\n          placeholder=\"Password\"\n        />\n        <button type=\"submit\" onClick={handleSubmit}>\n          Login\n        </button>\n      </form>\n      <p>\n        Don't have an account yet? <Link to=\"/register\">Register!</Link>\n      </p>\n    </FormWrapper>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport FormWrapper from \"../styles/FormWrapper\";\n\nconst Register = () => {\n  const url = \"https://jr-dev-sim-backend.herokuapp.com\";\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (password === confirmPassword) {\n        const newUser = {\n          name,\n          email,\n          password\n        };\n\n        axios\n          .post(`${url}/api/user/register`, newUser)\n          .then(console.log(newUser));\n\n        window.location = \"/\";\n      } else {\n        alert(\"Uh oh. Your passwords don't match.\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <h2>Register</h2>\n      <form>\n        <label htmlFor=\"name\">Display Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={e => setName(e.target.value)}\n          value={name}\n          placeholder=\"Display Name\"\n        />\n\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          onChange={e => setEmail(e.target.value)}\n          value={email}\n          placeholder=\"Email\"\n        />\n\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          onChange={e => setPassword(e.target.value)}\n          value={password}\n          placeholder=\"Password\"\n        />\n\n        <label htmlFor=\"confirm-password\">Confirm Password</label>\n        <input\n          type=\"password\"\n          name=\"confirm-password\"\n          onChange={e => setConfirmPassword(e.target.value)}\n          value={confirmPassword}\n          placeholder=\"Confirm Password\"\n        />\n\n        <button type=\"submit\" onClick={handleSubmit}>\n          Register\n        </button>\n      </form>\n      <p>\n        Already have an account? <Link to=\"/login\">Login!</Link>\n      </p>\n    </FormWrapper>\n  );\n};\n\nexport default Register;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nconst SingleJobWrapper = styled.div`\n  background: #282d33;\n  padding: 2rem;\n  border-radius: 10px;\n  color: #fff;\n\n  h3 {\n    font-size: 1.75rem;\n  }\n\n  h4 {\n    font-weight: 400;\n    font-size: 1.25rem;\n  }\n\n  h5 {\n    font-size: 1rem;\n  }\n\n  p {\n    font-size: 18px;\n    padding-bottom: 1rem;\n  }\n\n  div {\n    width: 25%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 2rem;\n  }\n\n  button {\n    margin: 2rem 0;\n    width: 100px;\n    cursor: pointer;\n    border-radius: 10px;\n    padding: 0.3rem 0;\n    font-size: 1rem;\n    // background: #e74990;\n    color: #fff;\n    border: none;\n  }\n\n  hr {\n    margin: 1rem 0rem;\n  }\n\n  .edit-button {\n    background: #40ca8c;\n  }\n\n  .delete-button {\n    background: #e75149;\n  }\n\n  .apply-button {\n    background: #e74990;\n    width: 200px;\n  }\n`;\n\nconst ViewSingleJob = () => {\n  const url = \"https://jr-dev-sim-backend.herokuapp.com\";\n  const { userData } = useContext(UserContext);\n  const { jobId } = useParams();\n  const [job, setJob] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`${url}/api/job`)\n      .then(res => setJob(res.data.find(job => job._id === jobId)))\n      .catch(err => console.log(err));\n  }, [jobId]);\n\n  const handleDelete = e => {\n    console.log(job);\n    e.preventDefault();\n    axios\n      .delete(`${url}/api/job/jobs/${jobId}`)\n      .then(res => console.log(\"Job Deleted\"));\n    console.log(jobId);\n    alert(\"Job Deleted!\");\n    window.location = \"/\";\n  };\n\n  if (userData.user) {\n    return (\n      <SingleJobWrapper>\n        <h3>\n          {job.jobTitle} - {job.company}\n        </h3>\n        <h4>{job.location}</h4>\n        <h4>{job.salary}</h4>\n        <hr />\n        <p>{job.description}</p>\n        <h5>\n          Contact Information: {job.contactName} - {job.contactEmail}\n        </h5>\n        <div>\n          <Link to={`/update/${job._id}`}>\n            <button className=\"edit-button\">Edit</button>\n          </Link>\n          <button className=\"delete-button\" onClick={handleDelete}>\n            Delete\n          </button>\n        </div>\n      </SingleJobWrapper>\n    );\n  }\n  return (\n    <SingleJobWrapper>\n      <h3>\n        {job.jobTitle} - {job.company}\n      </h3>\n      <h4>{job.location}</h4>\n      <h4>{job.salary}</h4>\n      <hr />\n      <p>{job.description}</p>\n      <h5>\n        Contact Information: {job.contactName} - {job.contactEmail}\n      </h5>\n      <button className=\"apply-button\">Apply for this position</button>\n    </SingleJobWrapper>\n  );\n};\n\nexport default ViewSingleJob;\n","import React, { useState } from \"react\";\nimport FormWrapper from \"../styles/FormWrapper\";\nimport axios from \"axios\";\nimport Error from \"../components/Error\";\n\nconst CreateNewJobListing = () => {\n  const url = \"https://jr-dev-sim-backend.herokuapp.com\";\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const [contactName, setContactName] = useState(\"\");\n  const [contactEmail, setContactEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const newJob = {\n        jobTitle,\n        company,\n        description,\n        location,\n        salary,\n        contactName,\n        contactEmail\n      };\n\n      await axios\n        .post(`${url}/api/job/create`, newJob)\n        .then(res => console.log(res.data));\n\n      alert(\"Job Created!\");\n      window.location = \"/\";\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <h2>Create A New Job Listing</h2>\n      {error && (\n        <Error message={error} clearError={() => setError(undefined)} />\n      )}\n      <form method=\"POST\">\n        <label htmlFor=\"job-title\">Job Title</label>\n        <input\n          type=\"text\"\n          name=\"job-title\"\n          onChange={e => setJobTitle(e.target.value)}\n          value={jobTitle}\n          placeholder=\"Job Title\"\n        />\n\n        <label htmlFor=\"company\">Company</label>\n        <input\n          type=\"text\"\n          name=\"company\"\n          onChange={e => setCompany(e.target.value)}\n          value={company}\n          placeholder=\"Company\"\n        />\n\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          type=\"text\"\n          name=\"description\"\n          onChange={e => setDescription(e.target.value)}\n          value={description}\n          placeholder=\"Description\"\n        />\n\n        <label htmlFor=\"location\">Location</label>\n        <input\n          type=\"text\"\n          name=\"location\"\n          onChange={e => setLocation(e.target.value)}\n          value={location}\n          placeholder=\"Location\"\n        />\n\n        <label htmlFor=\"salary\">Salary</label>\n        <input\n          type=\"text\"\n          name=\"salary\"\n          onChange={e => setSalary(e.target.value)}\n          value={salary}\n          placeholder=\"Salary\"\n        />\n\n        <label htmlFor=\"contact-name\">Contact Name</label>\n        <input\n          type=\"text\"\n          name=\"contact-name\"\n          onChange={e => setContactName(e.target.value)}\n          value={contactName}\n          placeholder=\"Contact Name\"\n        />\n\n        <label htmlFor=\"contact-email\">Contact Email</label>\n        <input\n          type=\"text\"\n          name=\"contact-email\"\n          onChange={e => setContactEmail(e.target.value)}\n          value={contactEmail}\n          placeholder=\"Contact Email\"\n        />\n\n        <button type=\"submit\" onClick={handleSubmit}>\n          Submit\n        </button>\n      </form>\n    </FormWrapper>\n  );\n};\n\nexport default CreateNewJobListing;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport FormWrapper from \"../styles/FormWrapper\";\nimport { useParams } from \"react-router\";\n\nconst UpdateJobListing = () => {\n  const url = \"https://jr-dev-sim-backend.herokuapp.com\";\n  const { jobId } = useParams();\n  const [job, setJob] = useState([]);\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const [contactName, setContactName] = useState(\"\");\n  const [contactEmail, setContactEmail] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(`${url}/api/job`)\n      .then(res => setJob(res.data.find(job => job._id === jobId)))\n      .catch(err => console.log(err));\n  }, [jobId]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const updatedJob = {\n        jobTitle,\n        company,\n        description,\n        location,\n        salary,\n        contactName,\n        contactEmail\n      };\n\n      if (updatedJob.jobTitle === \"\") {\n        updatedJob.jobTitle = job.jobTitle;\n      }\n\n      if (updatedJob.company === \"\") {\n        updatedJob.company = job.company;\n      }\n\n      if (updatedJob.description === \"\") {\n        updatedJob.description = job.description;\n      }\n\n      if (updatedJob.location === \"\") {\n        updatedJob.location = job.location;\n      }\n\n      if (updatedJob.salary === \"\") {\n        updatedJob.salary = job.salary;\n      }\n\n      if (updatedJob.contactName === \"\") {\n        updatedJob.contactName = job.contactName;\n      }\n\n      if (updatedJob.contactEmail === \"\") {\n        updatedJob.contactEmail = job.contactEmail;\n      }\n\n      axios.post(`${url}/api/job/update/${jobId}`, updatedJob).then(res => {\n        setJob(updatedJob);\n      });\n\n      alert(\"Job Updated!\");\n      window.location = \"/\";\n    } catch (err) {\n      console.log(err);\n      alert(err);\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <h2>Update A Job Listing</h2>\n      <form method=\"POST\">\n        <label htmlFor=\"job-title\">Job Title</label>\n        <input\n          type=\"text\"\n          name=\"job-title\"\n          onChange={e => setJobTitle(e.target.value)}\n          value={jobTitle}\n          placeholder={job.jobTitle}\n        />\n\n        <label htmlFor=\"company\">Company</label>\n        <input\n          type=\"text\"\n          name=\"company\"\n          onChange={e => setCompany(e.target.value)}\n          value={company}\n          placeholder={job.company}\n        />\n\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          type=\"text\"\n          name=\"description\"\n          onChange={e => setDescription(e.target.value)}\n          value={description}\n          placeholder={job.description}\n        />\n\n        <label htmlFor=\"location\">Location</label>\n        <input\n          type=\"text\"\n          name=\"location\"\n          onChange={e => setLocation(e.target.value)}\n          value={location}\n          placeholder={job.location}\n        />\n\n        <label htmlFor=\"salary\">Salary</label>\n        <input\n          type=\"text\"\n          name=\"salary\"\n          onChange={e => setSalary(e.target.value)}\n          value={salary}\n          placeholder={job.salary}\n        />\n\n        <label htmlFor=\"contact-name\">Contact Name</label>\n        <input\n          type=\"text\"\n          name=\"contact-name\"\n          onChange={e => setContactName(e.target.value)}\n          value={contactName}\n          placeholder={job.contactName}\n        />\n\n        <label htmlFor=\"contact-email\">Contact Email</label>\n        <input\n          type=\"text\"\n          name=\"contact-email\"\n          onChange={e => setContactEmail(e.target.value)}\n          value={contactEmail}\n          placeholder={job.contactEmail}\n        />\n\n        <button type=\"submit\" onClick={handleSubmit}>\n          Submit\n        </button>\n      </form>\n    </FormWrapper>\n  );\n};\n\nexport default UpdateJobListing;\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// Context\nimport UserContext from \"./context/UserContext\";\n\n// CSS\nimport GlobalStyles from \"./styles/GlobalStyles\";\n\n// Components\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\n\n// Pages\nimport JobList from \"./pages/JobList\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport ViewSingleJob from \"./pages/ViewSingleJob\";\nimport CreateNewJobListing from \"./pages/CreateNewJobListing\";\nimport UpdateJobListing from \"./pages/UpdateJobListing\";\n\nfunction App() {\n  const url = \"https://jr-dev-sim-backend.herokuapp.com\";\n  const [userData, setUserData] = useState({});\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n      }\n      const getUser = await axios.get(`${url}/api/user`, {\n        headers: { \"auth-token\": token }\n      });\n      setUserData({\n        token,\n        user: { name: getUser.data.name }\n      });\n    };\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <Router>\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <GlobalStyles />\n        <Nav />\n        <main className=\"main-container\">\n          <Route exact path=\"/\" component={JobList} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/jobs/:jobId\" component={ViewSingleJob} />\n          <Route path=\"/create\" component={CreateNewJobListing} />\n          <Route path=\"/update/:jobId\" component={UpdateJobListing} />\n        </main>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}